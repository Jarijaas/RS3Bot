// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world.proto

#ifndef PROTOBUF_world_2eproto__INCLUDED
#define PROTOBUF_world_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_world_2eproto();
void protobuf_AssignDesc_world_2eproto();
void protobuf_ShutdownFile_world_2eproto();

class BoolResponse;
class ChatMessage;
class CursorActionMessage;
class Empty;
class EntitiesResponse;
class Entity;
class EntityRequest;
class IdRequest;
class InteractRequest;
class InterfaceOpenMessage;
class Inventory;
class InventoryTypeRequest;
class Inventory_InventoryItem;
class ItemAction;
class Location;
class PropertyValue;
class UIAction;
class Widget;

enum Entity_MovementType {
  Entity_MovementType_Standing = 0,
  Entity_MovementType_Walking = 2,
  Entity_MovementType_Running = 3,
  Entity_MovementType_Entity_MovementType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Entity_MovementType_Entity_MovementType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Entity_MovementType_IsValid(int value);
const Entity_MovementType Entity_MovementType_MovementType_MIN = Entity_MovementType_Standing;
const Entity_MovementType Entity_MovementType_MovementType_MAX = Entity_MovementType_Running;
const int Entity_MovementType_MovementType_ARRAYSIZE = Entity_MovementType_MovementType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Entity_MovementType_descriptor();
inline const ::std::string& Entity_MovementType_Name(Entity_MovementType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Entity_MovementType_descriptor(), value);
}
inline bool Entity_MovementType_Parse(
    const ::std::string& name, Entity_MovementType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Entity_MovementType>(
    Entity_MovementType_descriptor(), name, value);
}
enum PropertyType {
  UnknownPropertyType = 0,
  Health = 659,
  PropertyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PropertyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PropertyType_IsValid(int value);
const PropertyType PropertyType_MIN = UnknownPropertyType;
const PropertyType PropertyType_MAX = Health;
const int PropertyType_ARRAYSIZE = PropertyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PropertyType_descriptor();
inline const ::std::string& PropertyType_Name(PropertyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PropertyType_descriptor(), value);
}
inline bool PropertyType_Parse(
    const ::std::string& name, PropertyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PropertyType>(
    PropertyType_descriptor(), name, value);
}
enum UIWidgetType {
  UnknownWidget = 0,
  BankWithdrawItem = 49938656,
  BankDepositItem = 49938459,
  BankTabAll = 49938560,
  BankTab2 = 49938568,
  BankTab3 = 49938576,
  BankTab4 = 49938584,
  BankTab5 = 49938592,
  BankTab6 = 49938600,
  BankTab7 = 49938608,
  BankTab8 = 49938616,
  BankTab9 = 49938624,
  LobbySelectTab = 59375714,
  LobbyPlayNow = 59375747,
  SelectWorld = 59637841,
  ChatOptionNext = 77594639,
  ChatOption1 = 77856773,
  ChatOption2 = 77856778,
  ChatOption3 = 77856783,
  ChatOption4 = 77856788,
  ChatOption5 = 77856793,
  Regenerate = 93716491,
  Retaliate = 93716535,
  QuickPrayers = 93716496,
  FollowerSelectLeftClickOption = 93716503,
  FollowerAttack = 93716509,
  InteractFollower = 93716510,
  DismissFollower = 93716525,
  CallFollower = 93716526,
  SummonPet = 93716529,
  SkillsItem = 96075783,
  WorldMap = 96010249,
  RunEnergy = 96010251,
  HomeTeleport = 96010258,
  Compass = 125763586,
  BackpackItem = 96534533,
  DepositAll = 49938523,
  DepositAllBox = 720907,
  ActionBar1 = 93716735,
  ActionBar2 = 93716736,
  ActionBar3 = 93716737,
  ActionBar4 = 93716738,
  ActionBarSlot1 = 93716542,
  ActionBarSlot2 = 93716555,
  ActionBarSlot3 = 93716568,
  ActionBarSlot4 = 93716581,
  ActionBarSlot5 = 93716594,
  ActionBarSlot6 = 93716607,
  ActionBarSlot7 = 93716620,
  ActionBarSlot8 = 93716633,
  ActionBarSlot9 = 93716646,
  ActionBarSlot10 = 93716659,
  ActionBarSlot11 = 93716672,
  ActionBarSlot12 = 93716685,
  ActionBarSlot13 = 93716698,
  ActionBarSlot14 = 93716711,
  ActionBarSlot15 = 93716724,
  Settings = 93913143,
  ExitToLobby = 93913151,
  ChatEnterMessage = 8978506,
  BanditCamp = 71565320,
  LunarIsle = 71565321,
  AlKharid = 71565322,
  Ardougne = 71565323,
  Burthorpe = 71565324,
  Catherby = 71565325,
  DraynorVillage = 71565326,
  Edgeville = 71565327,
  Falador = 71565328,
  Lumbdridge = 71565329,
  PortSarim = 71565330,
  SeersVillage = 71565331,
  Taverley = 71565332,
  Varrock = 71565333,
  Menaphos = 71565334,
  Yanille = 71565335,
  Canifis = 71565336,
  EaglesPeak = 71565337,
  FremennikProvince = 71565338,
  Karamja = 71565339,
  Ooglog = 71565340,
  Tirannw = 71565341,
  Wilderness = 71565342,
  Ashdale = 71565343,
  Priffdinas = 71565344,
  UIWidgetType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UIWidgetType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UIWidgetType_IsValid(int value);
const UIWidgetType UIWidgetType_MIN = UnknownWidget;
const UIWidgetType UIWidgetType_MAX = Compass;
const int UIWidgetType_ARRAYSIZE = UIWidgetType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UIWidgetType_descriptor();
inline const ::std::string& UIWidgetType_Name(UIWidgetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UIWidgetType_descriptor(), value);
}
inline bool UIWidgetType_Parse(
    const ::std::string& name, UIWidgetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UIWidgetType>(
    UIWidgetType_descriptor(), name, value);
}
enum EntityType {
  Object = 0,
  NPC = 1,
  Player = 2,
  GroundItem = 3,
  Object2 = 12,
  EntityType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityType_IsValid(int value);
const EntityType EntityType_MIN = Object;
const EntityType EntityType_MAX = Object2;
const int EntityType_ARRAYSIZE = EntityType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityType_descriptor();
inline const ::std::string& EntityType_Name(EntityType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityType_descriptor(), value);
}
inline bool EntityType_Parse(
    const ::std::string& name, EntityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityType>(
    EntityType_descriptor(), name, value);
}
// ===================================================================

class IdRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:IdRequest) */ {
 public:
  IdRequest();
  virtual ~IdRequest();

  IdRequest(const IdRequest& from);

  inline IdRequest& operator=(const IdRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IdRequest& default_instance();

  void Swap(IdRequest* other);

  // implements Message ----------------------------------------------

  inline IdRequest* New() const { return New(NULL); }

  IdRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IdRequest& from);
  void MergeFrom(const IdRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IdRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IdRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static IdRequest* default_instance_;
};
// -------------------------------------------------------------------

class CursorActionMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CursorActionMessage) */ {
 public:
  CursorActionMessage();
  virtual ~CursorActionMessage();

  CursorActionMessage(const CursorActionMessage& from);

  inline CursorActionMessage& operator=(const CursorActionMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CursorActionMessage& default_instance();

  void Swap(CursorActionMessage* other);

  // implements Message ----------------------------------------------

  inline CursorActionMessage* New() const { return New(NULL); }

  CursorActionMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CursorActionMessage& from);
  void MergeFrom(const CursorActionMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CursorActionMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 param1 = 1;
  void clear_param1();
  static const int kParam1FieldNumber = 1;
  ::google::protobuf::int32 param1() const;
  void set_param1(::google::protobuf::int32 value);

  // optional int32 param2 = 2;
  void clear_param2();
  static const int kParam2FieldNumber = 2;
  ::google::protobuf::int32 param2() const;
  void set_param2(::google::protobuf::int32 value);

  // optional int32 param3 = 3;
  void clear_param3();
  static const int kParam3FieldNumber = 3;
  ::google::protobuf::int32 param3() const;
  void set_param3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CursorActionMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 param1_;
  ::google::protobuf::int32 param2_;
  ::google::protobuf::int32 param3_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static CursorActionMessage* default_instance_;
};
// -------------------------------------------------------------------

class ChatMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ChatMessage) */ {
 public:
  ChatMessage();
  virtual ~ChatMessage();

  ChatMessage(const ChatMessage& from);

  inline ChatMessage& operator=(const ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatMessage& default_instance();

  void Swap(ChatMessage* other);

  // implements Message ----------------------------------------------

  inline ChatMessage* New() const { return New(NULL); }

  ChatMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChatMessage& from);
  void MergeFrom(const ChatMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChatMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional string content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:ChatMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static ChatMessage* default_instance_;
};
// -------------------------------------------------------------------

class InterfaceOpenMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InterfaceOpenMessage) */ {
 public:
  InterfaceOpenMessage();
  virtual ~InterfaceOpenMessage();

  InterfaceOpenMessage(const InterfaceOpenMessage& from);

  inline InterfaceOpenMessage& operator=(const InterfaceOpenMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InterfaceOpenMessage& default_instance();

  void Swap(InterfaceOpenMessage* other);

  // implements Message ----------------------------------------------

  inline InterfaceOpenMessage* New() const { return New(NULL); }

  InterfaceOpenMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InterfaceOpenMessage& from);
  void MergeFrom(const InterfaceOpenMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InterfaceOpenMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 interfaceId = 1;
  void clear_interfaceid();
  static const int kInterfaceIdFieldNumber = 1;
  ::google::protobuf::uint32 interfaceid() const;
  void set_interfaceid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:InterfaceOpenMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 interfaceid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static InterfaceOpenMessage* default_instance_;
};
// -------------------------------------------------------------------

class BoolResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BoolResponse) */ {
 public:
  BoolResponse();
  virtual ~BoolResponse();

  BoolResponse(const BoolResponse& from);

  inline BoolResponse& operator=(const BoolResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BoolResponse& default_instance();

  void Swap(BoolResponse* other);

  // implements Message ----------------------------------------------

  inline BoolResponse* New() const { return New(NULL); }

  BoolResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BoolResponse& from);
  void MergeFrom(const BoolResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BoolResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  bool value() const;
  void set_value(bool value);

  // @@protoc_insertion_point(class_scope:BoolResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  bool value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static BoolResponse* default_instance_;
};
// -------------------------------------------------------------------

class InventoryTypeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InventoryTypeRequest) */ {
 public:
  InventoryTypeRequest();
  virtual ~InventoryTypeRequest();

  InventoryTypeRequest(const InventoryTypeRequest& from);

  inline InventoryTypeRequest& operator=(const InventoryTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InventoryTypeRequest& default_instance();

  void Swap(InventoryTypeRequest* other);

  // implements Message ----------------------------------------------

  inline InventoryTypeRequest* New() const { return New(NULL); }

  InventoryTypeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InventoryTypeRequest& from);
  void MergeFrom(const InventoryTypeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InventoryTypeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:InventoryTypeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static InventoryTypeRequest* default_instance_;
};
// -------------------------------------------------------------------

class Widget : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Widget) */ {
 public:
  Widget();
  virtual ~Widget();

  Widget(const Widget& from);

  inline Widget& operator=(const Widget& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Widget& default_instance();

  void Swap(Widget* other);

  // implements Message ----------------------------------------------

  inline Widget* New() const { return New(NULL); }

  Widget* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Widget& from);
  void MergeFrom(const Widget& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Widget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 widgetId = 1;
  void clear_widgetid();
  static const int kWidgetIdFieldNumber = 1;
  ::google::protobuf::uint32 widgetid() const;
  void set_widgetid(::google::protobuf::uint32 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string hoverText = 3;
  void clear_hovertext();
  static const int kHoverTextFieldNumber = 3;
  const ::std::string& hovertext() const;
  void set_hovertext(const ::std::string& value);
  void set_hovertext(const char* value);
  void set_hovertext(const char* value, size_t size);
  ::std::string* mutable_hovertext();
  ::std::string* release_hovertext();
  void set_allocated_hovertext(::std::string* hovertext);

  // repeated string options = 4;
  int options_size() const;
  void clear_options();
  static const int kOptionsFieldNumber = 4;
  const ::std::string& options(int index) const;
  ::std::string* mutable_options(int index);
  void set_options(int index, const ::std::string& value);
  void set_options(int index, const char* value);
  void set_options(int index, const char* value, size_t size);
  ::std::string* add_options();
  void add_options(const ::std::string& value);
  void add_options(const char* value);
  void add_options(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& options() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_options();

  // @@protoc_insertion_point(class_scope:Widget)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr hovertext_;
  ::google::protobuf::RepeatedPtrField< ::std::string> options_;
  ::google::protobuf::uint32 widgetid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static Widget* default_instance_;
};
// -------------------------------------------------------------------

class PropertyValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PropertyValue) */ {
 public:
  PropertyValue();
  virtual ~PropertyValue();

  PropertyValue(const PropertyValue& from);

  inline PropertyValue& operator=(const PropertyValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PropertyValue& default_instance();

  void Swap(PropertyValue* other);

  // implements Message ----------------------------------------------

  inline PropertyValue* New() const { return New(NULL); }

  PropertyValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PropertyValue& from);
  void MergeFrom(const PropertyValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PropertyValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PropertyValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static PropertyValue* default_instance_;
};
// -------------------------------------------------------------------

class EntityRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EntityRequest) */ {
 public:
  EntityRequest();
  virtual ~EntityRequest();

  EntityRequest(const EntityRequest& from);

  inline EntityRequest& operator=(const EntityRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityRequest& default_instance();

  enum IdentifierCase {
    kId = 1,
    kName = 2,
    IDENTIFIER_NOT_SET = 0,
  };

  void Swap(EntityRequest* other);

  // implements Message ----------------------------------------------

  inline EntityRequest* New() const { return New(NULL); }

  EntityRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EntityRequest& from);
  void MergeFrom(const EntityRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EntityRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  private:
  bool has_id() const;
  public:
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional string name = 2;
  private:
  bool has_name() const;
  public:
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  IdentifierCase identifier_case() const;
  // @@protoc_insertion_point(class_scope:EntityRequest)
 private:
  inline void set_has_id();
  inline void set_has_name();

  inline bool has_identifier() const;
  void clear_identifier();
  inline void clear_has_identifier();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  union IdentifierUnion {
    IdentifierUnion() {}
    ::google::protobuf::uint32 id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
  } identifier_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static EntityRequest* default_instance_;
};
// -------------------------------------------------------------------

class UIAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UIAction) */ {
 public:
  UIAction();
  virtual ~UIAction();

  UIAction(const UIAction& from);

  inline UIAction& operator=(const UIAction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UIAction& default_instance();

  enum OptionCase {
    kOptionId = 1,
    kOptionText = 2,
    OPTION_NOT_SET = 0,
  };

  void Swap(UIAction* other);

  // implements Message ----------------------------------------------

  inline UIAction* New() const { return New(NULL); }

  UIAction* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UIAction& from);
  void MergeFrom(const UIAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UIAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 optionId = 1;
  private:
  bool has_optionid() const;
  public:
  void clear_optionid();
  static const int kOptionIdFieldNumber = 1;
  ::google::protobuf::uint32 optionid() const;
  void set_optionid(::google::protobuf::uint32 value);

  // optional string optionText = 2;
  private:
  bool has_optiontext() const;
  public:
  void clear_optiontext();
  static const int kOptionTextFieldNumber = 2;
  const ::std::string& optiontext() const;
  void set_optiontext(const ::std::string& value);
  void set_optiontext(const char* value);
  void set_optiontext(const char* value, size_t size);
  ::std::string* mutable_optiontext();
  ::std::string* release_optiontext();
  void set_allocated_optiontext(::std::string* optiontext);

  // optional int32 param2 = 3;
  void clear_param2();
  static const int kParam2FieldNumber = 3;
  ::google::protobuf::int32 param2() const;
  void set_param2(::google::protobuf::int32 value);

  // optional .UIWidgetType id = 4;
  void clear_id();
  static const int kIdFieldNumber = 4;
  ::UIWidgetType id() const;
  void set_id(::UIWidgetType value);

  OptionCase option_case() const;
  // @@protoc_insertion_point(class_scope:UIAction)
 private:
  inline void set_has_optionid();
  inline void set_has_optiontext();

  inline bool has_option() const;
  void clear_option();
  inline void clear_has_option();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 param2_;
  int id_;
  union OptionUnion {
    OptionUnion() {}
    ::google::protobuf::uint32 optionid_;
    ::google::protobuf::internal::ArenaStringPtr optiontext_;
  } option_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static UIAction* default_instance_;
};
// -------------------------------------------------------------------

class ItemAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ItemAction) */ {
 public:
  ItemAction();
  virtual ~ItemAction();

  ItemAction(const ItemAction& from);

  inline ItemAction& operator=(const ItemAction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemAction& default_instance();

  void Swap(ItemAction* other);

  // implements Message ----------------------------------------------

  inline ItemAction* New() const { return New(NULL); }

  ItemAction* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemAction& from);
  void MergeFrom(const ItemAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ItemAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 slot = 1;
  void clear_slot();
  static const int kSlotFieldNumber = 1;
  ::google::protobuf::uint32 slot() const;
  void set_slot(::google::protobuf::uint32 value);

  // optional string option = 2;
  void clear_option();
  static const int kOptionFieldNumber = 2;
  const ::std::string& option() const;
  void set_option(const ::std::string& value);
  void set_option(const char* value);
  void set_option(const char* value, size_t size);
  ::std::string* mutable_option();
  ::std::string* release_option();
  void set_allocated_option(::std::string* option);

  // @@protoc_insertion_point(class_scope:ItemAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr option_;
  ::google::protobuf::uint32 slot_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static ItemAction* default_instance_;
};
// -------------------------------------------------------------------

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  void Swap(Empty* other);

  // implements Message ----------------------------------------------

  inline Empty* New() const { return New(NULL); }

  Empty* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static Empty* default_instance_;
};
// -------------------------------------------------------------------

class Entity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Entity) */ {
 public:
  Entity();
  virtual ~Entity();

  Entity(const Entity& from);

  inline Entity& operator=(const Entity& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Entity& default_instance();

  void Swap(Entity* other);

  // implements Message ----------------------------------------------

  inline Entity* New() const { return New(NULL); }

  Entity* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Entity& from);
  void MergeFrom(const Entity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Entity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Entity_MovementType MovementType;
  static const MovementType Standing =
    Entity_MovementType_Standing;
  static const MovementType Walking =
    Entity_MovementType_Walking;
  static const MovementType Running =
    Entity_MovementType_Running;
  static inline bool MovementType_IsValid(int value) {
    return Entity_MovementType_IsValid(value);
  }
  static const MovementType MovementType_MIN =
    Entity_MovementType_MovementType_MIN;
  static const MovementType MovementType_MAX =
    Entity_MovementType_MovementType_MAX;
  static const int MovementType_ARRAYSIZE =
    Entity_MovementType_MovementType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MovementType_descriptor() {
    return Entity_MovementType_descriptor();
  }
  static inline const ::std::string& MovementType_Name(MovementType value) {
    return Entity_MovementType_Name(value);
  }
  static inline bool MovementType_Parse(const ::std::string& name,
      MovementType* value) {
    return Entity_MovementType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional .EntityType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::EntityType type() const;
  void set_type(::EntityType value);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .Location location = 4;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 4;
  const ::Location& location() const;
  ::Location* mutable_location();
  ::Location* release_location();
  void set_allocated_location(::Location* location);

  // optional int32 health = 5;
  void clear_health();
  static const int kHealthFieldNumber = 5;
  ::google::protobuf::int32 health() const;
  void set_health(::google::protobuf::int32 value);

  // optional int32 max_health = 6;
  void clear_max_health();
  static const int kMaxHealthFieldNumber = 6;
  ::google::protobuf::int32 max_health() const;
  void set_max_health(::google::protobuf::int32 value);

  // optional int32 level = 7;
  void clear_level();
  static const int kLevelFieldNumber = 7;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional bool is_interacting = 8;
  void clear_is_interacting();
  static const int kIsInteractingFieldNumber = 8;
  bool is_interacting() const;
  void set_is_interacting(bool value);

  // optional .Entity.MovementType mov_type = 9;
  void clear_mov_type();
  static const int kMovTypeFieldNumber = 9;
  ::Entity_MovementType mov_type() const;
  void set_mov_type(::Entity_MovementType value);

  // optional uint32 action_id = 10;
  void clear_action_id();
  static const int kActionIdFieldNumber = 10;
  ::google::protobuf::uint32 action_id() const;
  void set_action_id(::google::protobuf::uint32 value);

  // repeated string options = 11;
  int options_size() const;
  void clear_options();
  static const int kOptionsFieldNumber = 11;
  const ::std::string& options(int index) const;
  ::std::string* mutable_options(int index);
  void set_options(int index, const ::std::string& value);
  void set_options(int index, const char* value);
  void set_options(int index, const char* value, size_t size);
  ::std::string* add_options();
  void add_options(const ::std::string& value);
  void add_options(const char* value);
  void add_options(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& options() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_options();

  // optional bool is_controlled = 12;
  void clear_is_controlled();
  static const int kIsControlledFieldNumber = 12;
  bool is_controlled() const;
  void set_is_controlled(bool value);

  // @@protoc_insertion_point(class_scope:Entity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 id_;
  int type_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::Location* location_;
  ::google::protobuf::int32 health_;
  ::google::protobuf::int32 max_health_;
  ::google::protobuf::int32 level_;
  int mov_type_;
  ::google::protobuf::uint32 action_id_;
  bool is_interacting_;
  bool is_controlled_;
  ::google::protobuf::RepeatedPtrField< ::std::string> options_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static Entity* default_instance_;
};
// -------------------------------------------------------------------

class InteractRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InteractRequest) */ {
 public:
  InteractRequest();
  virtual ~InteractRequest();

  InteractRequest(const InteractRequest& from);

  inline InteractRequest& operator=(const InteractRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InteractRequest& default_instance();

  void Swap(InteractRequest* other);

  // implements Message ----------------------------------------------

  inline InteractRequest* New() const { return New(NULL); }

  InteractRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InteractRequest& from);
  void MergeFrom(const InteractRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InteractRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Entity entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  const ::Entity& entity() const;
  ::Entity* mutable_entity();
  ::Entity* release_entity();
  void set_allocated_entity(::Entity* entity);

  // optional string option = 2;
  void clear_option();
  static const int kOptionFieldNumber = 2;
  const ::std::string& option() const;
  void set_option(const ::std::string& value);
  void set_option(const char* value);
  void set_option(const char* value, size_t size);
  ::std::string* mutable_option();
  ::std::string* release_option();
  void set_allocated_option(::std::string* option);

  // @@protoc_insertion_point(class_scope:InteractRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::Entity* entity_;
  ::google::protobuf::internal::ArenaStringPtr option_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static InteractRequest* default_instance_;
};
// -------------------------------------------------------------------

class EntitiesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EntitiesResponse) */ {
 public:
  EntitiesResponse();
  virtual ~EntitiesResponse();

  EntitiesResponse(const EntitiesResponse& from);

  inline EntitiesResponse& operator=(const EntitiesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EntitiesResponse& default_instance();

  void Swap(EntitiesResponse* other);

  // implements Message ----------------------------------------------

  inline EntitiesResponse* New() const { return New(NULL); }

  EntitiesResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EntitiesResponse& from);
  void MergeFrom(const EntitiesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EntitiesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Entity entities = 1;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 1;
  const ::Entity& entities(int index) const;
  ::Entity* mutable_entities(int index);
  ::Entity* add_entities();
  ::google::protobuf::RepeatedPtrField< ::Entity >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::Entity >&
      entities() const;

  // @@protoc_insertion_point(class_scope:EntitiesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::Entity > entities_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static EntitiesResponse* default_instance_;
};
// -------------------------------------------------------------------

class Location : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Location) */ {
 public:
  Location();
  virtual ~Location();

  Location(const Location& from);

  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Location& default_instance();

  void Swap(Location* other);

  // implements Message ----------------------------------------------

  inline Location* New() const { return New(NULL); }

  Location* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Location& from);
  void MergeFrom(const Location& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Location* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tile_x = 1;
  void clear_tile_x();
  static const int kTileXFieldNumber = 1;
  ::google::protobuf::int32 tile_x() const;
  void set_tile_x(::google::protobuf::int32 value);

  // optional int32 tile_y = 2;
  void clear_tile_y();
  static const int kTileYFieldNumber = 2;
  ::google::protobuf::int32 tile_y() const;
  void set_tile_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Location)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 tile_x_;
  ::google::protobuf::int32 tile_y_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static Location* default_instance_;
};
// -------------------------------------------------------------------

class Inventory_InventoryItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Inventory.InventoryItem) */ {
 public:
  Inventory_InventoryItem();
  virtual ~Inventory_InventoryItem();

  Inventory_InventoryItem(const Inventory_InventoryItem& from);

  inline Inventory_InventoryItem& operator=(const Inventory_InventoryItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Inventory_InventoryItem& default_instance();

  void Swap(Inventory_InventoryItem* other);

  // implements Message ----------------------------------------------

  inline Inventory_InventoryItem* New() const { return New(NULL); }

  Inventory_InventoryItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Inventory_InventoryItem& from);
  void MergeFrom(const Inventory_InventoryItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Inventory_InventoryItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 quantity = 2;
  void clear_quantity();
  static const int kQuantityFieldNumber = 2;
  ::google::protobuf::int32 quantity() const;
  void set_quantity(::google::protobuf::int32 value);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 slot = 4;
  void clear_slot();
  static const int kSlotFieldNumber = 4;
  ::google::protobuf::int32 slot() const;
  void set_slot(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Inventory.InventoryItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 quantity_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 slot_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static Inventory_InventoryItem* default_instance_;
};
// -------------------------------------------------------------------

class Inventory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Inventory) */ {
 public:
  Inventory();
  virtual ~Inventory();

  Inventory(const Inventory& from);

  inline Inventory& operator=(const Inventory& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Inventory& default_instance();

  void Swap(Inventory* other);

  // implements Message ----------------------------------------------

  inline Inventory* New() const { return New(NULL); }

  Inventory* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Inventory& from);
  void MergeFrom(const Inventory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Inventory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Inventory_InventoryItem InventoryItem;

  // accessors -------------------------------------------------------

  // repeated .Inventory.InventoryItem items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::Inventory_InventoryItem& items(int index) const;
  ::Inventory_InventoryItem* mutable_items(int index);
  ::Inventory_InventoryItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::Inventory_InventoryItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::Inventory_InventoryItem >&
      items() const;

  // @@protoc_insertion_point(class_scope:Inventory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::Inventory_InventoryItem > items_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_world_2eproto();
  friend void protobuf_AssignDesc_world_2eproto();
  friend void protobuf_ShutdownFile_world_2eproto();

  void InitAsDefaultInstance();
  static Inventory* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// IdRequest

// optional uint32 id = 1;
inline void IdRequest::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 IdRequest::id() const {
  // @@protoc_insertion_point(field_get:IdRequest.id)
  return id_;
}
inline void IdRequest::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:IdRequest.id)
}

// -------------------------------------------------------------------

// CursorActionMessage

// optional int32 param1 = 1;
inline void CursorActionMessage::clear_param1() {
  param1_ = 0;
}
inline ::google::protobuf::int32 CursorActionMessage::param1() const {
  // @@protoc_insertion_point(field_get:CursorActionMessage.param1)
  return param1_;
}
inline void CursorActionMessage::set_param1(::google::protobuf::int32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:CursorActionMessage.param1)
}

// optional int32 param2 = 2;
inline void CursorActionMessage::clear_param2() {
  param2_ = 0;
}
inline ::google::protobuf::int32 CursorActionMessage::param2() const {
  // @@protoc_insertion_point(field_get:CursorActionMessage.param2)
  return param2_;
}
inline void CursorActionMessage::set_param2(::google::protobuf::int32 value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:CursorActionMessage.param2)
}

// optional int32 param3 = 3;
inline void CursorActionMessage::clear_param3() {
  param3_ = 0;
}
inline ::google::protobuf::int32 CursorActionMessage::param3() const {
  // @@protoc_insertion_point(field_get:CursorActionMessage.param3)
  return param3_;
}
inline void CursorActionMessage::set_param3(::google::protobuf::int32 value) {
  
  param3_ = value;
  // @@protoc_insertion_point(field_set:CursorActionMessage.param3)
}

// -------------------------------------------------------------------

// ChatMessage

// optional uint32 type = 1;
inline void ChatMessage::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 ChatMessage::type() const {
  // @@protoc_insertion_point(field_get:ChatMessage.type)
  return type_;
}
inline void ChatMessage::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ChatMessage.type)
}

// optional string content = 2;
inline void ChatMessage::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChatMessage::content() const {
  // @@protoc_insertion_point(field_get:ChatMessage.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMessage::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ChatMessage.content)
}
inline void ChatMessage::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ChatMessage.content)
}
inline void ChatMessage::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ChatMessage.content)
}
inline ::std::string* ChatMessage::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:ChatMessage.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatMessage::release_content() {
  // @@protoc_insertion_point(field_release:ChatMessage.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChatMessage::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:ChatMessage.content)
}

// -------------------------------------------------------------------

// InterfaceOpenMessage

// optional uint32 interfaceId = 1;
inline void InterfaceOpenMessage::clear_interfaceid() {
  interfaceid_ = 0u;
}
inline ::google::protobuf::uint32 InterfaceOpenMessage::interfaceid() const {
  // @@protoc_insertion_point(field_get:InterfaceOpenMessage.interfaceId)
  return interfaceid_;
}
inline void InterfaceOpenMessage::set_interfaceid(::google::protobuf::uint32 value) {
  
  interfaceid_ = value;
  // @@protoc_insertion_point(field_set:InterfaceOpenMessage.interfaceId)
}

// -------------------------------------------------------------------

// BoolResponse

// optional bool value = 1;
inline void BoolResponse::clear_value() {
  value_ = false;
}
inline bool BoolResponse::value() const {
  // @@protoc_insertion_point(field_get:BoolResponse.value)
  return value_;
}
inline void BoolResponse::set_value(bool value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:BoolResponse.value)
}

// -------------------------------------------------------------------

// InventoryTypeRequest

// optional uint32 type = 1;
inline void InventoryTypeRequest::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 InventoryTypeRequest::type() const {
  // @@protoc_insertion_point(field_get:InventoryTypeRequest.type)
  return type_;
}
inline void InventoryTypeRequest::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:InventoryTypeRequest.type)
}

// -------------------------------------------------------------------

// Widget

// optional uint32 widgetId = 1;
inline void Widget::clear_widgetid() {
  widgetid_ = 0u;
}
inline ::google::protobuf::uint32 Widget::widgetid() const {
  // @@protoc_insertion_point(field_get:Widget.widgetId)
  return widgetid_;
}
inline void Widget::set_widgetid(::google::protobuf::uint32 value) {
  
  widgetid_ = value;
  // @@protoc_insertion_point(field_set:Widget.widgetId)
}

// optional string name = 2;
inline void Widget::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Widget::name() const {
  // @@protoc_insertion_point(field_get:Widget.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Widget::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Widget.name)
}
inline void Widget::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Widget.name)
}
inline void Widget::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Widget.name)
}
inline ::std::string* Widget::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Widget.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Widget::release_name() {
  // @@protoc_insertion_point(field_release:Widget.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Widget::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Widget.name)
}

// optional string hoverText = 3;
inline void Widget::clear_hovertext() {
  hovertext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Widget::hovertext() const {
  // @@protoc_insertion_point(field_get:Widget.hoverText)
  return hovertext_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Widget::set_hovertext(const ::std::string& value) {
  
  hovertext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Widget.hoverText)
}
inline void Widget::set_hovertext(const char* value) {
  
  hovertext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Widget.hoverText)
}
inline void Widget::set_hovertext(const char* value, size_t size) {
  
  hovertext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Widget.hoverText)
}
inline ::std::string* Widget::mutable_hovertext() {
  
  // @@protoc_insertion_point(field_mutable:Widget.hoverText)
  return hovertext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Widget::release_hovertext() {
  // @@protoc_insertion_point(field_release:Widget.hoverText)
  
  return hovertext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Widget::set_allocated_hovertext(::std::string* hovertext) {
  if (hovertext != NULL) {
    
  } else {
    
  }
  hovertext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hovertext);
  // @@protoc_insertion_point(field_set_allocated:Widget.hoverText)
}

// repeated string options = 4;
inline int Widget::options_size() const {
  return options_.size();
}
inline void Widget::clear_options() {
  options_.Clear();
}
inline const ::std::string& Widget::options(int index) const {
  // @@protoc_insertion_point(field_get:Widget.options)
  return options_.Get(index);
}
inline ::std::string* Widget::mutable_options(int index) {
  // @@protoc_insertion_point(field_mutable:Widget.options)
  return options_.Mutable(index);
}
inline void Widget::set_options(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Widget.options)
  options_.Mutable(index)->assign(value);
}
inline void Widget::set_options(int index, const char* value) {
  options_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Widget.options)
}
inline void Widget::set_options(int index, const char* value, size_t size) {
  options_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Widget.options)
}
inline ::std::string* Widget::add_options() {
  // @@protoc_insertion_point(field_add_mutable:Widget.options)
  return options_.Add();
}
inline void Widget::add_options(const ::std::string& value) {
  options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Widget.options)
}
inline void Widget::add_options(const char* value) {
  options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Widget.options)
}
inline void Widget::add_options(const char* value, size_t size) {
  options_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Widget.options)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Widget::options() const {
  // @@protoc_insertion_point(field_list:Widget.options)
  return options_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Widget::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:Widget.options)
  return &options_;
}

// -------------------------------------------------------------------

// PropertyValue

// optional uint32 value = 1;
inline void PropertyValue::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 PropertyValue::value() const {
  // @@protoc_insertion_point(field_get:PropertyValue.value)
  return value_;
}
inline void PropertyValue::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:PropertyValue.value)
}

// -------------------------------------------------------------------

// EntityRequest

// optional uint32 id = 1;
inline bool EntityRequest::has_id() const {
  return identifier_case() == kId;
}
inline void EntityRequest::set_has_id() {
  _oneof_case_[0] = kId;
}
inline void EntityRequest::clear_id() {
  if (has_id()) {
    identifier_.id_ = 0u;
    clear_has_identifier();
  }
}
inline ::google::protobuf::uint32 EntityRequest::id() const {
  // @@protoc_insertion_point(field_get:EntityRequest.id)
  if (has_id()) {
    return identifier_.id_;
  }
  return 0u;
}
inline void EntityRequest::set_id(::google::protobuf::uint32 value) {
  if (!has_id()) {
    clear_identifier();
    set_has_id();
  }
  identifier_.id_ = value;
  // @@protoc_insertion_point(field_set:EntityRequest.id)
}

// optional string name = 2;
inline bool EntityRequest::has_name() const {
  return identifier_case() == kName;
}
inline void EntityRequest::set_has_name() {
  _oneof_case_[0] = kName;
}
inline void EntityRequest::clear_name() {
  if (has_name()) {
    identifier_.name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_identifier();
  }
}
inline const ::std::string& EntityRequest::name() const {
  // @@protoc_insertion_point(field_get:EntityRequest.name)
  if (has_name()) {
    return identifier_.name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void EntityRequest::set_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:EntityRequest.name)
  if (!has_name()) {
    clear_identifier();
    set_has_name();
    identifier_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  identifier_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:EntityRequest.name)
}
inline void EntityRequest::set_name(const char* value) {
  if (!has_name()) {
    clear_identifier();
    set_has_name();
    identifier_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  identifier_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:EntityRequest.name)
}
inline void EntityRequest::set_name(const char* value, size_t size) {
  if (!has_name()) {
    clear_identifier();
    set_has_name();
    identifier_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  identifier_.name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:EntityRequest.name)
}
inline ::std::string* EntityRequest::mutable_name() {
  if (!has_name()) {
    clear_identifier();
    set_has_name();
    identifier_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:EntityRequest.name)
  return identifier_.name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EntityRequest::release_name() {
  // @@protoc_insertion_point(field_release:EntityRequest.name)
  if (has_name()) {
    clear_has_identifier();
    return identifier_.name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void EntityRequest::set_allocated_name(::std::string* name) {
  if (!has_name()) {
    identifier_.name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_identifier();
  if (name != NULL) {
    set_has_name();
    identifier_.name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        name);
  }
  // @@protoc_insertion_point(field_set_allocated:EntityRequest.name)
}

inline bool EntityRequest::has_identifier() const {
  return identifier_case() != IDENTIFIER_NOT_SET;
}
inline void EntityRequest::clear_has_identifier() {
  _oneof_case_[0] = IDENTIFIER_NOT_SET;
}
inline EntityRequest::IdentifierCase EntityRequest::identifier_case() const {
  return EntityRequest::IdentifierCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// UIAction

// optional uint32 optionId = 1;
inline bool UIAction::has_optionid() const {
  return option_case() == kOptionId;
}
inline void UIAction::set_has_optionid() {
  _oneof_case_[0] = kOptionId;
}
inline void UIAction::clear_optionid() {
  if (has_optionid()) {
    option_.optionid_ = 0u;
    clear_has_option();
  }
}
inline ::google::protobuf::uint32 UIAction::optionid() const {
  // @@protoc_insertion_point(field_get:UIAction.optionId)
  if (has_optionid()) {
    return option_.optionid_;
  }
  return 0u;
}
inline void UIAction::set_optionid(::google::protobuf::uint32 value) {
  if (!has_optionid()) {
    clear_option();
    set_has_optionid();
  }
  option_.optionid_ = value;
  // @@protoc_insertion_point(field_set:UIAction.optionId)
}

// optional string optionText = 2;
inline bool UIAction::has_optiontext() const {
  return option_case() == kOptionText;
}
inline void UIAction::set_has_optiontext() {
  _oneof_case_[0] = kOptionText;
}
inline void UIAction::clear_optiontext() {
  if (has_optiontext()) {
    option_.optiontext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_option();
  }
}
inline const ::std::string& UIAction::optiontext() const {
  // @@protoc_insertion_point(field_get:UIAction.optionText)
  if (has_optiontext()) {
    return option_.optiontext_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void UIAction::set_optiontext(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:UIAction.optionText)
  if (!has_optiontext()) {
    clear_option();
    set_has_optiontext();
    option_.optiontext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  option_.optiontext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UIAction.optionText)
}
inline void UIAction::set_optiontext(const char* value) {
  if (!has_optiontext()) {
    clear_option();
    set_has_optiontext();
    option_.optiontext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  option_.optiontext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UIAction.optionText)
}
inline void UIAction::set_optiontext(const char* value, size_t size) {
  if (!has_optiontext()) {
    clear_option();
    set_has_optiontext();
    option_.optiontext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  option_.optiontext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UIAction.optionText)
}
inline ::std::string* UIAction::mutable_optiontext() {
  if (!has_optiontext()) {
    clear_option();
    set_has_optiontext();
    option_.optiontext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:UIAction.optionText)
  return option_.optiontext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UIAction::release_optiontext() {
  // @@protoc_insertion_point(field_release:UIAction.optionText)
  if (has_optiontext()) {
    clear_has_option();
    return option_.optiontext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void UIAction::set_allocated_optiontext(::std::string* optiontext) {
  if (!has_optiontext()) {
    option_.optiontext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_option();
  if (optiontext != NULL) {
    set_has_optiontext();
    option_.optiontext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        optiontext);
  }
  // @@protoc_insertion_point(field_set_allocated:UIAction.optionText)
}

// optional int32 param2 = 3;
inline void UIAction::clear_param2() {
  param2_ = 0;
}
inline ::google::protobuf::int32 UIAction::param2() const {
  // @@protoc_insertion_point(field_get:UIAction.param2)
  return param2_;
}
inline void UIAction::set_param2(::google::protobuf::int32 value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:UIAction.param2)
}

// optional .UIWidgetType id = 4;
inline void UIAction::clear_id() {
  id_ = 0;
}
inline ::UIWidgetType UIAction::id() const {
  // @@protoc_insertion_point(field_get:UIAction.id)
  return static_cast< ::UIWidgetType >(id_);
}
inline void UIAction::set_id(::UIWidgetType value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:UIAction.id)
}

inline bool UIAction::has_option() const {
  return option_case() != OPTION_NOT_SET;
}
inline void UIAction::clear_has_option() {
  _oneof_case_[0] = OPTION_NOT_SET;
}
inline UIAction::OptionCase UIAction::option_case() const {
  return UIAction::OptionCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ItemAction

// optional uint32 slot = 1;
inline void ItemAction::clear_slot() {
  slot_ = 0u;
}
inline ::google::protobuf::uint32 ItemAction::slot() const {
  // @@protoc_insertion_point(field_get:ItemAction.slot)
  return slot_;
}
inline void ItemAction::set_slot(::google::protobuf::uint32 value) {
  
  slot_ = value;
  // @@protoc_insertion_point(field_set:ItemAction.slot)
}

// optional string option = 2;
inline void ItemAction::clear_option() {
  option_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ItemAction::option() const {
  // @@protoc_insertion_point(field_get:ItemAction.option)
  return option_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemAction::set_option(const ::std::string& value) {
  
  option_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ItemAction.option)
}
inline void ItemAction::set_option(const char* value) {
  
  option_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ItemAction.option)
}
inline void ItemAction::set_option(const char* value, size_t size) {
  
  option_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ItemAction.option)
}
inline ::std::string* ItemAction::mutable_option() {
  
  // @@protoc_insertion_point(field_mutable:ItemAction.option)
  return option_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ItemAction::release_option() {
  // @@protoc_insertion_point(field_release:ItemAction.option)
  
  return option_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ItemAction::set_allocated_option(::std::string* option) {
  if (option != NULL) {
    
  } else {
    
  }
  option_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), option);
  // @@protoc_insertion_point(field_set_allocated:ItemAction.option)
}

// -------------------------------------------------------------------

// Empty

// -------------------------------------------------------------------

// Entity

// optional uint32 id = 1;
inline void Entity::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Entity::id() const {
  // @@protoc_insertion_point(field_get:Entity.id)
  return id_;
}
inline void Entity::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Entity.id)
}

// optional .EntityType type = 2;
inline void Entity::clear_type() {
  type_ = 0;
}
inline ::EntityType Entity::type() const {
  // @@protoc_insertion_point(field_get:Entity.type)
  return static_cast< ::EntityType >(type_);
}
inline void Entity::set_type(::EntityType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Entity.type)
}

// optional string name = 3;
inline void Entity::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Entity::name() const {
  // @@protoc_insertion_point(field_get:Entity.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entity::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Entity.name)
}
inline void Entity::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Entity.name)
}
inline void Entity::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Entity.name)
}
inline ::std::string* Entity::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Entity.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entity::release_name() {
  // @@protoc_insertion_point(field_release:Entity.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entity::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Entity.name)
}

// optional .Location location = 4;
inline bool Entity::has_location() const {
  return !_is_default_instance_ && location_ != NULL;
}
inline void Entity::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
inline const ::Location& Entity::location() const {
  // @@protoc_insertion_point(field_get:Entity.location)
  return location_ != NULL ? *location_ : *default_instance_->location_;
}
inline ::Location* Entity::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::Location;
  }
  // @@protoc_insertion_point(field_mutable:Entity.location)
  return location_;
}
inline ::Location* Entity::release_location() {
  // @@protoc_insertion_point(field_release:Entity.location)
  
  ::Location* temp = location_;
  location_ = NULL;
  return temp;
}
inline void Entity::set_allocated_location(::Location* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Entity.location)
}

// optional int32 health = 5;
inline void Entity::clear_health() {
  health_ = 0;
}
inline ::google::protobuf::int32 Entity::health() const {
  // @@protoc_insertion_point(field_get:Entity.health)
  return health_;
}
inline void Entity::set_health(::google::protobuf::int32 value) {
  
  health_ = value;
  // @@protoc_insertion_point(field_set:Entity.health)
}

// optional int32 max_health = 6;
inline void Entity::clear_max_health() {
  max_health_ = 0;
}
inline ::google::protobuf::int32 Entity::max_health() const {
  // @@protoc_insertion_point(field_get:Entity.max_health)
  return max_health_;
}
inline void Entity::set_max_health(::google::protobuf::int32 value) {
  
  max_health_ = value;
  // @@protoc_insertion_point(field_set:Entity.max_health)
}

// optional int32 level = 7;
inline void Entity::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 Entity::level() const {
  // @@protoc_insertion_point(field_get:Entity.level)
  return level_;
}
inline void Entity::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:Entity.level)
}

// optional bool is_interacting = 8;
inline void Entity::clear_is_interacting() {
  is_interacting_ = false;
}
inline bool Entity::is_interacting() const {
  // @@protoc_insertion_point(field_get:Entity.is_interacting)
  return is_interacting_;
}
inline void Entity::set_is_interacting(bool value) {
  
  is_interacting_ = value;
  // @@protoc_insertion_point(field_set:Entity.is_interacting)
}

// optional .Entity.MovementType mov_type = 9;
inline void Entity::clear_mov_type() {
  mov_type_ = 0;
}
inline ::Entity_MovementType Entity::mov_type() const {
  // @@protoc_insertion_point(field_get:Entity.mov_type)
  return static_cast< ::Entity_MovementType >(mov_type_);
}
inline void Entity::set_mov_type(::Entity_MovementType value) {
  
  mov_type_ = value;
  // @@protoc_insertion_point(field_set:Entity.mov_type)
}

// optional uint32 action_id = 10;
inline void Entity::clear_action_id() {
  action_id_ = 0u;
}
inline ::google::protobuf::uint32 Entity::action_id() const {
  // @@protoc_insertion_point(field_get:Entity.action_id)
  return action_id_;
}
inline void Entity::set_action_id(::google::protobuf::uint32 value) {
  
  action_id_ = value;
  // @@protoc_insertion_point(field_set:Entity.action_id)
}

// repeated string options = 11;
inline int Entity::options_size() const {
  return options_.size();
}
inline void Entity::clear_options() {
  options_.Clear();
}
inline const ::std::string& Entity::options(int index) const {
  // @@protoc_insertion_point(field_get:Entity.options)
  return options_.Get(index);
}
inline ::std::string* Entity::mutable_options(int index) {
  // @@protoc_insertion_point(field_mutable:Entity.options)
  return options_.Mutable(index);
}
inline void Entity::set_options(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Entity.options)
  options_.Mutable(index)->assign(value);
}
inline void Entity::set_options(int index, const char* value) {
  options_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Entity.options)
}
inline void Entity::set_options(int index, const char* value, size_t size) {
  options_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Entity.options)
}
inline ::std::string* Entity::add_options() {
  // @@protoc_insertion_point(field_add_mutable:Entity.options)
  return options_.Add();
}
inline void Entity::add_options(const ::std::string& value) {
  options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Entity.options)
}
inline void Entity::add_options(const char* value) {
  options_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Entity.options)
}
inline void Entity::add_options(const char* value, size_t size) {
  options_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Entity.options)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Entity::options() const {
  // @@protoc_insertion_point(field_list:Entity.options)
  return options_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Entity::mutable_options() {
  // @@protoc_insertion_point(field_mutable_list:Entity.options)
  return &options_;
}

// optional bool is_controlled = 12;
inline void Entity::clear_is_controlled() {
  is_controlled_ = false;
}
inline bool Entity::is_controlled() const {
  // @@protoc_insertion_point(field_get:Entity.is_controlled)
  return is_controlled_;
}
inline void Entity::set_is_controlled(bool value) {
  
  is_controlled_ = value;
  // @@protoc_insertion_point(field_set:Entity.is_controlled)
}

// -------------------------------------------------------------------

// InteractRequest

// optional .Entity entity = 1;
inline bool InteractRequest::has_entity() const {
  return !_is_default_instance_ && entity_ != NULL;
}
inline void InteractRequest::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
inline const ::Entity& InteractRequest::entity() const {
  // @@protoc_insertion_point(field_get:InteractRequest.entity)
  return entity_ != NULL ? *entity_ : *default_instance_->entity_;
}
inline ::Entity* InteractRequest::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::Entity;
  }
  // @@protoc_insertion_point(field_mutable:InteractRequest.entity)
  return entity_;
}
inline ::Entity* InteractRequest::release_entity() {
  // @@protoc_insertion_point(field_release:InteractRequest.entity)
  
  ::Entity* temp = entity_;
  entity_ = NULL;
  return temp;
}
inline void InteractRequest::set_allocated_entity(::Entity* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:InteractRequest.entity)
}

// optional string option = 2;
inline void InteractRequest::clear_option() {
  option_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InteractRequest::option() const {
  // @@protoc_insertion_point(field_get:InteractRequest.option)
  return option_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InteractRequest::set_option(const ::std::string& value) {
  
  option_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InteractRequest.option)
}
inline void InteractRequest::set_option(const char* value) {
  
  option_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InteractRequest.option)
}
inline void InteractRequest::set_option(const char* value, size_t size) {
  
  option_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InteractRequest.option)
}
inline ::std::string* InteractRequest::mutable_option() {
  
  // @@protoc_insertion_point(field_mutable:InteractRequest.option)
  return option_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InteractRequest::release_option() {
  // @@protoc_insertion_point(field_release:InteractRequest.option)
  
  return option_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InteractRequest::set_allocated_option(::std::string* option) {
  if (option != NULL) {
    
  } else {
    
  }
  option_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), option);
  // @@protoc_insertion_point(field_set_allocated:InteractRequest.option)
}

// -------------------------------------------------------------------

// EntitiesResponse

// repeated .Entity entities = 1;
inline int EntitiesResponse::entities_size() const {
  return entities_.size();
}
inline void EntitiesResponse::clear_entities() {
  entities_.Clear();
}
inline const ::Entity& EntitiesResponse::entities(int index) const {
  // @@protoc_insertion_point(field_get:EntitiesResponse.entities)
  return entities_.Get(index);
}
inline ::Entity* EntitiesResponse::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:EntitiesResponse.entities)
  return entities_.Mutable(index);
}
inline ::Entity* EntitiesResponse::add_entities() {
  // @@protoc_insertion_point(field_add:EntitiesResponse.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Entity >*
EntitiesResponse::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:EntitiesResponse.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Entity >&
EntitiesResponse::entities() const {
  // @@protoc_insertion_point(field_list:EntitiesResponse.entities)
  return entities_;
}

// -------------------------------------------------------------------

// Location

// optional int32 tile_x = 1;
inline void Location::clear_tile_x() {
  tile_x_ = 0;
}
inline ::google::protobuf::int32 Location::tile_x() const {
  // @@protoc_insertion_point(field_get:Location.tile_x)
  return tile_x_;
}
inline void Location::set_tile_x(::google::protobuf::int32 value) {
  
  tile_x_ = value;
  // @@protoc_insertion_point(field_set:Location.tile_x)
}

// optional int32 tile_y = 2;
inline void Location::clear_tile_y() {
  tile_y_ = 0;
}
inline ::google::protobuf::int32 Location::tile_y() const {
  // @@protoc_insertion_point(field_get:Location.tile_y)
  return tile_y_;
}
inline void Location::set_tile_y(::google::protobuf::int32 value) {
  
  tile_y_ = value;
  // @@protoc_insertion_point(field_set:Location.tile_y)
}

// -------------------------------------------------------------------

// Inventory_InventoryItem

// optional int32 id = 1;
inline void Inventory_InventoryItem::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Inventory_InventoryItem::id() const {
  // @@protoc_insertion_point(field_get:Inventory.InventoryItem.id)
  return id_;
}
inline void Inventory_InventoryItem::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Inventory.InventoryItem.id)
}

// optional int32 quantity = 2;
inline void Inventory_InventoryItem::clear_quantity() {
  quantity_ = 0;
}
inline ::google::protobuf::int32 Inventory_InventoryItem::quantity() const {
  // @@protoc_insertion_point(field_get:Inventory.InventoryItem.quantity)
  return quantity_;
}
inline void Inventory_InventoryItem::set_quantity(::google::protobuf::int32 value) {
  
  quantity_ = value;
  // @@protoc_insertion_point(field_set:Inventory.InventoryItem.quantity)
}

// optional string name = 3;
inline void Inventory_InventoryItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Inventory_InventoryItem::name() const {
  // @@protoc_insertion_point(field_get:Inventory.InventoryItem.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Inventory_InventoryItem::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Inventory.InventoryItem.name)
}
inline void Inventory_InventoryItem::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Inventory.InventoryItem.name)
}
inline void Inventory_InventoryItem::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Inventory.InventoryItem.name)
}
inline ::std::string* Inventory_InventoryItem::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Inventory.InventoryItem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Inventory_InventoryItem::release_name() {
  // @@protoc_insertion_point(field_release:Inventory.InventoryItem.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Inventory_InventoryItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Inventory.InventoryItem.name)
}

// optional int32 slot = 4;
inline void Inventory_InventoryItem::clear_slot() {
  slot_ = 0;
}
inline ::google::protobuf::int32 Inventory_InventoryItem::slot() const {
  // @@protoc_insertion_point(field_get:Inventory.InventoryItem.slot)
  return slot_;
}
inline void Inventory_InventoryItem::set_slot(::google::protobuf::int32 value) {
  
  slot_ = value;
  // @@protoc_insertion_point(field_set:Inventory.InventoryItem.slot)
}

// -------------------------------------------------------------------

// Inventory

// repeated .Inventory.InventoryItem items = 1;
inline int Inventory::items_size() const {
  return items_.size();
}
inline void Inventory::clear_items() {
  items_.Clear();
}
inline const ::Inventory_InventoryItem& Inventory::items(int index) const {
  // @@protoc_insertion_point(field_get:Inventory.items)
  return items_.Get(index);
}
inline ::Inventory_InventoryItem* Inventory::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Inventory.items)
  return items_.Mutable(index);
}
inline ::Inventory_InventoryItem* Inventory::add_items() {
  // @@protoc_insertion_point(field_add:Inventory.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Inventory_InventoryItem >*
Inventory::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Inventory.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Inventory_InventoryItem >&
Inventory::items() const {
  // @@protoc_insertion_point(field_list:Inventory.items)
  return items_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Entity_MovementType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Entity_MovementType>() {
  return ::Entity_MovementType_descriptor();
}
template <> struct is_proto_enum< ::PropertyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PropertyType>() {
  return ::PropertyType_descriptor();
}
template <> struct is_proto_enum< ::UIWidgetType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::UIWidgetType>() {
  return ::UIWidgetType_descriptor();
}
template <> struct is_proto_enum< ::EntityType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EntityType>() {
  return ::EntityType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_world_2eproto__INCLUDED
